{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAY5C,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,MAIlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAZpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCNlBG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEUI,MAAMF,GAFhB,8BAEsBG,OAFtB,uBAEZC,EAFY,EAEZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QAPtB,kBAUZK,GAVY,2CAAH,sDCEPO,EAAc,SAAC,GAA4B,IAAD,IAA1BL,IAAKC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACzC,OACI,sBAAca,UAAU,yCAAxB,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,MAFED,ICALQ,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAACoB,KAAK,GAAIa,SAAQ,IADf,mBAC/BC,EAD+B,KACxBC,EADwB,KAKtC,OAHCC,qBAAU,WACPvB,EAAQC,GAAUuB,MAAK,SAAAhB,GAAI,OAAIc,EAAS,CAACf,KAAKC,EAAMY,SAAQ,SAC7D,CAACnB,IACGoB,EDHwBI,CAAaxB,GAArCmB,EAD4B,EAC5BA,QAAcP,EADc,EACnBN,KAChB,OACI,qCACA,oBAAIS,UAAU,yCAAd,SAAwDf,IACvDmB,GAAS,mBAAGJ,UAAU,wCAAb,wBACV,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAK,SAAAC,GAAG,OAAI,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIC,aEPzCe,EAAe,WAAO,IAAD,EACMvC,mBAAS,CAAC,YADhB,mBACvBwC,EADuB,KACXzC,EADW,KAE9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQyC,EAAWlB,KAAI,SAAAR,GACX,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCT7C2B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.dc715f2b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories((cat) => [inputValue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=JSyZarB3mxVQeSnML1QfMu4vdIKdp4OM`;\r\n    const {data} = await ( await fetch(url)).json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({img:{id, title, url}}) => {\r\n    return (\r\n        <div key={id} className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {loading, data:images} = useFetchGifs(category);\r\n    return (\r\n        <>\r\n        <h3 className='card animate__animated animate__fadeIn'>{category}</h3>\r\n        {loading&&<p className='card animate__animated animate__flash'>'Cargando'</p>}\r\n        <div className=\"card-grid\">\r\n            {images.map( img => <GifGridItem key={img.id} img={img}/>)}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({data:[], loading:true});\r\n     useEffect(() => {\r\n        getGifs(category).then(gifs => setState({data:gifs, loading:false}));\r\n    }, [category]);\r\n    return state;\r\n}\r\n","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['simpson'])\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category =>{\r\n                        return <GifGrid key={category} category={category}/>\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp.js';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}